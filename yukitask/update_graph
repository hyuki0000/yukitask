#!/usr/bin/env ruby

require 'json'
require 'date'

load '$YUKITASKHOME/config.rb'

PREFIX_PATHS = CONFIG["PREFIX_PATHS"]
W = 16
H = 16
PADDING = 2
RECENT_DAYS = 10
LOG_FILENAME = "$YUKITASKHOME/log.json"
GRAPH_FILENAME = "$YUKITASKHOME/graph.html"
GRAPH_RECENT_FILENAME = "$YUKITASKHOME/graph-recent.html"

def write_svg(a, filename, width, height)
  d = Hash.new {|hash, key| hash[key] = Hash.new(0) }
  p = Hash.new {|hash, key| hash[key] = Hash.new(0) }
  a.each do |item|
    d[item["date"]][item["pwd"]] += 1
    p[item["pwd"]][item["date"]] += 1
  end
  File::open(File.expand_path(filename), "w") do |f|
    f.puts <<"EOD"
<!DOCTYPE html>
<html>
<body>
<!-- This file is automatically created by update_graph. Do not edit by hand. -->
<svg width="#{width}" height="#{height}">
EOD
    row = 0
    x = y = 0
    p.keys.sort.each do |pwd|
      col = 0
      d.keys.sort.each do |date|
        x = col * (W + PADDING)
        y = row * (H + PADDING)
        case d[date][pwd]
        when 0
          f.puts %Q(<rect x="#{x}" y="#{y}" width="#{W}" height="#{H}" fill="#f0f0f0"/>)
        else
          f.puts %Q(<rect x="#{x}" y="#{y}" width="#{W}" height="#{H}" fill="#6666ff"/>)
        end
        col += 1
      end
      f.puts %Q(<text x="#{col * (W + PADDING) + 2}" y="#{y + (H + PADDING) - 4}" fill="black" font-family="Verdana" font-size="#{H}" stroke="black">#{pwd}</text>)
      row += 1
    end
    f.puts <<"EOD"
</svg>
</body>
</html>
EOD
  end
end

a = nil
File::open(File.expand_path(LOG_FILENAME), "r") do |file|
  a = JSON.load(file)
end
write_svg(a, GRAPH_FILENAME, 1000, 500)

# Recent 10 days only
latest = (Time.now - RECENT_DAYS * 24 * 60 * 60).strftime("%Y-%m-%d")
a = a.delete_if do |e|
  e["date"] < latest
end
a.each do |e|
  PREFIX_PATHS.each do |prefix|
    e["pwd"].sub!(prefix, "")
  end
end
write_svg(a, GRAPH_RECENT_FILENAME, 1000, 500)

# vim: set filetype=ruby:
